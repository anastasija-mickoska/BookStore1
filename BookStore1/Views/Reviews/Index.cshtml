@model IEnumerable<BookStore1.Models.Review>

@{
    ViewData["Title"] = "Index";
}

<h1>Reviews</h1>

@if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("User")))
{
<p class="create">
    <button class="add"><a asp-action="Create">Create New</a></button>
</p>    
}

@foreach (var item in Model)
{
    <div class="card-group">
        <div class="card">
            <div class="card-body reviewIndex">
                <h5 class="card-title">
                    @Html.DisplayFor(modelItem => item.AppUser)
                </h5>
                <p class="card-text">
                    <b>Book : </b>@Html.DisplayFor(modelItem => item.Book.Title)
                </p>
                <p class="card-text">
                    @Html.DisplayFor(modelItem => item.Comment)
                </p>
                <p class="card-text">
                    <b>Rating : </b>@Html.DisplayFor(modelItem => item.Rating)
                </p>
            </div>
            <div class="buttons">
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <button class="edit"><a asp-action="Edit" asp-route-id="@item.Id">Edit</a> </button>
                }
                <button class="details"><a asp-action="Details" asp-route-id="@item.Id">Details</a> </button>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <button class="delete"><a asp-action="Delete" asp-route-id="@item.Id">Delete</a></button>
                }
            </div>
        </div>
    </div>
}
